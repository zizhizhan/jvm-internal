// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.zizhizhan.aopalliance.rmi.v0;

public final class HelloServiceImp_Stub
        extends java.rmi.server.RemoteStub
        implements com.zizhizhan.aopalliance.rmi.v0.HelloService, java.rmi.Remote {
    private static final long serialVersionUID = 2;

    private static java.lang.reflect.Method $method_getServiceName_0;
    private static java.lang.reflect.Method $method_sayHello_1;

    static {
        try {
            $method_getServiceName_0 = com.zizhizhan.aopalliance.rmi.v0.HelloService.class.getMethod("getServiceName", new java.lang.Class[]{});
            $method_sayHello_1 = com.zizhizhan.aopalliance.rmi.v0.HelloService.class.getMethod("sayHello", new java.lang.Class[]{});
        } catch (java.lang.NoSuchMethodException e) {
            throw new java.lang.NoSuchMethodError(
                    "stub class initialization failed");
        }
    }

    // constructors
    public HelloServiceImp_Stub(java.rmi.server.RemoteRef ref) {
        super(ref);
    }

    // methods from remote interfaces

    // implementation of getServiceName()
    public java.lang.String getServiceName()
            throws java.rmi.RemoteException {
        try {
            Object $result = ref.invoke(this, $method_getServiceName_0, null, -8216242703053710144L);
            return ((java.lang.String) $result);
        } catch (java.lang.RuntimeException e) {
            throw e;
        } catch (java.rmi.RemoteException e) {
            throw e;
        } catch (java.lang.Exception e) {
            throw new java.rmi.UnexpectedException("undeclared checked exception", e);
        }
    }

    // implementation of sayHello()
    public void sayHello()
            throws java.rmi.RemoteException {
        try {
            ref.invoke(this, $method_sayHello_1, null, 516526451560295596L);
        } catch (java.lang.RuntimeException e) {
            throw e;
        } catch (java.rmi.RemoteException e) {
            throw e;
        } catch (java.lang.Exception e) {
            throw new java.rmi.UnexpectedException("undeclared checked exception", e);
        }
    }
}
